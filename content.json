{"meta":{"title":"雨沐","subtitle":"","description":"遇事不决，可问春风","author":"yqy","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"QT从入门到入土","slug":"Qt教程","date":"2024-04-24T02:00:18.000Z","updated":"2024-04-26T09:47:27.147Z","comments":true,"path":"2024/04/24/Qt教程/","permalink":"http://example.com/2024/04/24/Qt%E6%95%99%E7%A8%8B/","excerpt":"","text":"1.Qt概述1.1 什么是 QtQt是一个跨平台的C++图形用户界面应用程序框架。它为应用程序开发者提供建立艺术级图形界面所需的所有功能。它是完全面向对象的，很容易扩展，并且允许真正的组件编程。 1.2 Qt 发展史1991年 Qt最早由奇趣科技开发 1996年 进入商业领域，它也是目前流行的Linux桌面环境KDE的基础 2008年 奇趣科技被诺基亚公司收购，Qt称为诺基亚旗下的编程语言 2012年 Qt又被Digia公司收购 2014年4月 跨平台的集成开发环境Qt Creator3.1.0发布，同年5月20日配发了Qt5.3正式版，至此Qt实现了对iOS、Android、WP等各平台的全面支持。 1.3 支持平台 Windows – XP、Vista、Win7、Win8、Win2008、Win10 Uinux&#x2F;X11 – Linux、Sun Solaris、HP-UX、Compaq Tru64 UNIX、IBM AIX、SGI IRIX、FreeBSD、BSD&#x2F;OS、和其他很多X11平台 Macintosh – Mac OS X Embedded – 有帧缓冲支持的嵌入式Linux平台，Windows CE 1.4 Qt 版本Qt按照不同的版本发行，分为商业版和开源版 商业版 为商业软件提供开发，他们提供传统商业软件发行版，并且提供在商业有效期内的免费升级和技术支持服务。 开源的LGPL版本： 为了开发自有而设计的开放源码软件，它提供了和商业版本同样的功能，在GNU通用公共许可下，它是免费的。 1.5 下载与安装下载地址 http:&#x2F;&#x2F;www.qt.io/download-open-source/ Qt6后只支持在线版本安装 1.双击.exe文件，就可以进行安装。首先就是登录qt账户，如果没有可以自行注册一个。然后选择个人用户，之后点击下一步进行安装。 2.这一步是问你对qt有什么改善的建议，直接选择没有，然后继续进行下一步 然后更改qt的安装目录，个人不建议放在C盘，因为软件过大，会影响后续的软件运行。所以我本人是选择放在了D盘。然后对于下边的选3项，个人是建议选择第一个的。第一个是根据自己的需求进行选择安装需要的组件，而下边的是官方直接给配置的组件，会多安装很多不需要的内容，所以还是建议根据自己的需求进行选择性的安装。![](.&#x2F;Qt&#x2F;152631301a5f4de2ba3d3da58001655d (1).png) 组件解释 然后点击下一步，勾选同意 然后一直点击下一步就可以完成安装啦 之后就可以打开Qt Creator 看一下自己的环境变量里是否有Qt的相关配置，如果没有的话，需要手动添加上！就是将bin目录添加进去 ![](.&#x2F;Qt&#x2F;6c4efe5fcfca42b3befd4fd3dac1d507 (1).png) 安装完成 2 创建Qt项目2.1 使用向导创建打开Qt Creator 界面选择 New Project或者选择菜单栏 【文件】-【新建文件或项目】菜单项 向导会默认添加一个继承自CMainWindow的类，可以在此修改类的名字和基类。默认的基类有QMainWindow、QWidget以及QDialog三个，我们可以选择QWidget（类似于空窗口），QMainWindow多出来菜单栏，QDialog是对话框是继承于QWiget，这里我们可以先创建一个不带UI的界面，继续下一步 系统会默认给我们添加main.cpp、mywidget.cpp、 mywidget.h和一个.pro项目文件，点击完成，即可创建出一个Qt桌面程序。 一定要选择qmake不然没有.pro文件 2.2 .pro文件在使用Qt向导生成的应用程序.pro文件格式如下： 123456789101112131415161718192021222324#包含的模块QT += core gui#大于Qt4版本 才包含widget模块greaterThan(QT_MAJOR_VERSION, 4): QT += widgets#CONFIG用来告诉qmake关于应用程序的配置信息CONFIG += c++17#使用c++17的特性#指定生成的应用程序名： TARGET = QtDemoTEMPLATE = app #工程中包含的源文件 SOURCES += \\ main.cpp \\ widget.cpp#工程中包含的头文件 HEADERS += \\ widget.h # Default rules for deployment. qnx: target.path = /tmp/$$&#123;TARGET&#125;/bin else: unix:!android: target.path = /opt/$$&#123;TARGET&#125;/bin !isEmpty(target.path): INSTALLS += target Qt的基本模块 ![](.&#x2F;Qt&#x2F;Qt5 模块.png) .pro就是工程文件(project)，它是qmake自动生成的用于生产makefile的配置文件。 模板变量告诉qmake为这个应用程序生成哪种makefile。下面是可供使用的选择：TEMPLATE &#x3D; app app -建立一个应用程序的makefile。这是默认值，所以如果模板没有被指定，这个将被使用。 lib - 建立一个库的makefile。 vcapp - 建立一个应用程序的VisualStudio项目文件。 vclib - 建立一个库的VisualStudio项目文件。 subdirs -这是一个特殊的模板，它可以创建一个能够进入特定目录并且为一个项目文件生成makefile并且为它调用make的makefile。 2.3 一个简单的Qt应用程序mian入口函数 123456789101112131415#include &quot;widget.h&quot;#include &lt;QApplication&gt;//main程序入口 argc命令行变量的数量 argv命令行变量的数组int main(int argc, char *argv[])&#123; //应用程序对象，在qt中应用程序对象有且仅有一个 QApplication a(argc, argv); //窗口对象，Widget父类 -&gt;QWidget Widget w; //窗口对象，默认不显示，必须要调用show方法显示窗口 w.show(); //让应用程序对象进入消息 return a.exec();&#125; Qt系统提供的标准类名声明头文件没有.h后缀 Qt一个类对应一个头文件，类名就是头文件名 QApplication应用程序类: 管理图形用户界面应用程序的控制流和主要设置。 是Qt的整个后台管理的命脉它包含主事件循环，在其中来自窗口系统和其它资源的所有事件处理和调度。它也处理应用程序的初始化和结束，并且提供对话管理。 对于任何一个使用Qt的图形用户界面应用程序，都正好存在一个QApplication 对象，而不论这个应用程序在同一时间内是不是有0、1、2或更多个窗口。 a.exec() 程序进入消息循环，等待对用户输入进行响应。这里main()把控制权转交给Qt，Qt完成事件处理工作，当应用程序退出的时候exec()的值就会返回。在exec()中，Qt接受并处理用户和系统的事件并且把它们传递给适当的窗口部件。 widget.h 12345678910111213141516//避免包含重复头文件#ifndef WIDGET_H#define WIDGET_H//包含头文件QWidget窗口类#include &lt;QWidget&gt;class Widget : public QWidget&#123; Q_OBJECTpublic: Widget(QWidget *parent = nullptr); ~Widget();&#125;;#endif // WIDGET_H","categories":[],"tags":[]},{"title":"博客搭建","slug":"博客搭建","date":"2024-04-23T03:41:46.000Z","updated":"2024-04-23T07:51:24.376Z","comments":true,"path":"2024/04/23/博客搭建/","permalink":"http://example.com/2024/04/23/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/","excerpt":"","text":"使用Hexo搭建并自定义个人博客摘要Hexo 是一个轻量级、简洁的静态博客框架，它允许你使用 Markdown 语法编写文章，并通过简单的命令生成静态网页。本文将指导你如何从零开始搭建一个基于 Hexo 的个人博客，选择并安装一个新主题，以及如何部署到 Gitee 上。 1.安装hexo首先，确保计算机上安装了 Node.js 和 npm。然后，通过 npm 安装 Hexo 命令行工具。 12345678# 全局安装 Hexo CLInpm install hexo-cli -g# 创建一个博客目录，初始化一个新的 Hexo 博客项目可以在目录直接初始化，不用添加名字hexo init blog# 进入博客目录安装依赖npm install 2.启动本地服务器在 Hexo 项目目录中，启动本地服务器以实时预览你的博客。 12345# 启动本地服务器hexo server# 或者使用简写hexo s 3.创建文章使用 Hexo 创建新文章。 12# 创建一篇新文章hexo new &quot;第一篇文章&quot; 创建文章后可在博客文件夹资源找到md文件 4.安装并应用新主题选择一个 Hexo 主题，例如 Ayer。安装并应用到你的 Hexo 博客。 主题网站 开始使用 | Hexo Fluid 用户手册 (fluid-dev.com) 12345# 安装 Ayer 主题npm install hexo-theme-ayer --save# 或者对于 Hexo 版本低于 5.0，将主题下载到themes文件夹中git clone https://gitee.com/mirrors/ayer.git themes/ayer 5.配置主题在 Hexo 的配置文件 _config.yml 中设置主题。 12# 在 _config.yml 中设置主题theme: ayer 6.自定义主题根据你选择的主题，编辑主题的配置文件来自定义你的博客。例如，Ayer 主题的配置文件通常位于 themes/ayer/_config.yml。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241# 侧边栏菜单menu: 主页: / 归档: /archives 分类: /categories 标签: /tags 旅行: /tags/旅行/ 壁纸: https://wallpaper.seenav.cn/ 友链: /friends 关于我: /2022/01/01/关于我/# 站点次标题和打字动效# https://github.com/mattboldt/typed.jssubtitle: enable: true # 是否开启动效 text: 面朝大海，春暖花开 # 显示的文字 text2: 一生努力，一生被爱 # 滚动播放，如果不需要可以留空 text3: 想要的都拥有，得不到的都释怀 # 最多支持三段文字 startDelay: 0 # 延迟时间 typeSpeed: 200 # 打字速度 loop: true # 是否循环 backSpeed: 100 # 回退速度 showCursor: true # 是否显示光标# 网站图标和侧边栏logofavicon: /blog/favicon.icologo: /blog/images/ayer.png# 封面配置# enable-是否启用封面；path-封面背景图；logo-封面logocover: enable: true path: /blog/images/cover1.jpg # /source/images目录下附送多张美图，可更换 logo: false #/images/ayer.svg，如果不要直接设置成false# 页面顶部进度条progressBar: false# 告示板模块broadcast: enable: true # true开启，false关闭 type: 2 # 1：自定义输入，2：一言api(https://hitokoto.cn/) text: 一个安静优雅的hexo主题，快速且响应式。 # type为1时有效# 文章配置# 文章太长，截断按钮文字(在需要截断的行增加此标记：&lt;!--more--&gt;)excerpt_link: 阅读更多...# 如果你嫌每篇文章手动加more标记比较麻烦，又不想在首页全文显示，可以把excerpt_all设置成true，这样首页只会显示文章归档excerpt_all: false# 是否开启代码复制按钮copy_btn: true# 是否开启文章分享按钮share_enable: true# 国内的社交平台(If you are not in China, maybe you prefer to set:false)share_china: true# 文章分享文字share_text: 分享# 分页文字nav_text: page_prev: 上一页 page_next: 下一页 post_prev: 上一篇 post_next: 下一篇# 文章页是否显示目录toc: true# 文章中的图片是否支持点击放大image_viewer: true# https://github.com/willin/hexo-wordcount# 是否开启字数统计(关闭请设置enable为false)# 也可以单独在md文件里Front-matter设置`no_word_count: true`属性，来自定义关闭字数统计word_count: enable: true # 只在文章详情显示(不在首页显示) only_article_visit: true# 打赏# 打赏type设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏reward_type: 2# 打赏wordingreward_wording: &quot;请我喝杯奶茶吧~&quot;# 支付宝二维码图片地址，跟你设置logo的方式一样。比如：/images/alipay.jpgalipay: /images/alipay.jpg# 微信二维码图片地址weixin: /images/wechat.jpg# 版权声明# 版权声明type设定：0-关闭版权声明； 1-文章对应的md文件里有copyright: true属性，才有版权声明； 2-所有文章均有版权声明copyright_type: 2# 是否启用搜索# 需要安装hexo-generator-searchdb(https://github.com/theme-next/hexo-generator-searchdb)search: true# RSS订阅(先安装hexo-generator-feed插件，再去博客根目录config进行配置)# 不想显示可以直接留空rss: /atom.xml# 是否启用黑夜模式开关darkmode: true# 动态背景效果: 0-关闭，1-动态线条(跟随鼠标)canvas_bg: 1# 自定义鼠标样式，直接替换/images/mouse.cur文件mouse: enable: false path: /blog/images/mouse.cur# 鼠标点击效果：0-关闭，1-爱心，2-爆炸烟花，3-粒子烟花click_effect: 3# 页面宽度自定义（不建议修改，可能造成布局混乱），article_width文章宽度，sidebar_width侧边栏宽度layout: article_width: 80rem sidebar_width: 8rem# GitHub Ribbons-封面右上角的forkme，换样式直接在source/images目录下替换forkme图片github: # (关闭请设置为false) enable: true url: https://gitee.com/bestwishes0203# 网易云音乐插件music: enable: true # 播放器尺寸类型(1：小尺寸、2：大尺寸) type: 1 id: 1497588709 # 网易云分享的音乐ID(更换音乐请更改此配置项) autoPlay: false # 是否开启自动播放# 访问量统计(不蒜子)busuanzi: enable: true# 友盟cnzz统计(url填js代码src链接)cnzz: enable: true url: https://s9.cnzz.com/z_stat.php?id=1278069914&amp;web_id=1278069914# Google Analyticsgoogle_analytics: &quot;&quot;# 百度统计baidu_analytics: &quot;&quot;# Mathjax数学公式mathjax: false# Katex数学公式(allpost设置为false时只有头部设置math:true的文章才开启)# 需要更换hexo渲染器，npm un hexo-renderer-marked -S &amp;&amp; npm i hexo-renderer-markdown-it-katex -Skatex: enable: false # true allpost: true copy_tex: false# mermaid流程图 三个选项缺一不可(https://mermaid-js.github.io/mermaid/)mermaid: enable: false cdn: https://cdn.staticfile.org/mermaid/8.14.0/mermaid.min.js theme: forest# 网站成立年份(默认为 2019，若填入年份小于当前年份，则显示为 2018-2019 类似的格式)since: 2022# ICP备案信息尾部显示icp: enable: false url: &quot;https://beian.miit.gov.cn/&quot; # 备案链接 text: &quot;浙ICP备88888888&quot; # 备案信息# 公安备案信息尾部显示gongan: enable: false img: /images/beian.png #公安备案图片 url: &quot;http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=01234567890123&quot; #公安备案链接 text: &quot;浙公网安备01234567890123号&quot; #公安备案信息# 友情链接friends_link: # Ayer主题: #网站名称 # #网站地址 # url: https://github.com/Shen-Yu/hexo-theme-ayer # #网站图片(可忽略不写) # img: /images/ayer.png Hexo官网: url: https://hexo.io img: /images/hexo.png Hexo图表插件: url: https://github.com/Shen-Yu/hexo-tag-chart img: /images/hexo-tag-chart.png# 评论：1、Valine(推荐)；2、Gitalk；3、Twikoo;# 1、Valine[一款快速、简洁且高效的无后端评论系统](https://github.com/xCss/Valine)# 启用Valine必须先创建leancloud应用， 获取 id|key 填入即可leancloud: enable: false app_id: # app_key: ## Valine配置valine: enable: false # 是否启用 avatar: monsterid # 头像样式(https://valine.js.org/avatar.html) placeholder: 给我的文章加点评论吧~ # placeholder# 2、Gitalk(https://github.com/gitalk/gitalk)gitalk: enable: false # true clientID: # GitHub Application Client ID clientSecret: # Client Secret repo: # Repository name owner: # GitHub ID admin: # GitHub ID# 3、Twikoo(https://github.com/imaegoo/twikoo)twikoo: enable: true envId: ## 首页广告配置# 可以根据需要自行增加ad_3，ad_4...，留空则不显示，建议图片和url不要带ad等关键词，否则可能会被adblock等插件屏蔽# ads:# ad_1:# title: 云服务器限时秒杀# img: https://pic.imgdb.cn/item/62174b452ab3f51d912a5ccc.jpg# url: https://curl.qcloud.com/kvO7hb43# width: 300# ad_2:# title: vultr优惠vps# img: https://pic.imgdb.cn/item/62174b452ab3f51d912a5cd7.png# url: https://www.vultr.com/?ref=8630075# width: 300# 网站开启加密访问，密码可设置任何字符lock: enable: false password: 123456 7.关联博客到gitee在 _config.yml 文件中配置 Gitee 仓库信息，并部署博客。 12345#配置deploy: type: git repo: https://github.com/Yang978/yang978.github.git branch: master 8.预览和部署确保一切设置正确，进入本地博客文件夹&gt;右键&gt;在终端打开。 12345# 启动本地服务器预览博客hexo server# 简写hexo s 如果部署不上去可能是博客跟目录下的 _congif.yml 中deploy&gt;repo没有修改为自己的地址。 123456789101112131415161718192021# 清理缓存hexo clean# 生成博客内容hexo g# 启动本地服务器预览博客（可选）hexo server# 简写hexo s# 安装 Hexo 部署插件（安装一次即可）npm install hexo-deployer-git --save# 部署博客hexo deploy# 简写hexo d","categories":[],"tags":[]}],"categories":[],"tags":[]}